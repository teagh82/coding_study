2022 line coding test
n1 —————————————————————————————————————————————————
def solution(logs):
    answer = 0

    for i in logs:
        # 로그 길이가 100이 넘는 경우 
        if len(i) > 100:
            answer += 1
            continue

        arr = i.split(' ')
        # 로그 형식에 맞지 않는 경우 
        if 'team_name' not in arr or 'application_name' not in arr or 'error_level' not in arr or 'message' not in arr: 
            answer += 1
            continue

        # 내용에 공백이 있는 경우
        if len(arr) != 12:
            answer += 1
            continue

        # 메시지 내용에 숫자나 특수문자가 있는 경우
        if not arr[11].isalpha():
            answer += 1
            continue

    return answer
n2 —————————————————————————————————————————————————
def solution(sentences, n):
    answer = 0

    alpha = [[] for _ in range(len(sentences))]
    score = [0 for _ in range(len(sentences))]

    for idx, i in enumerate(sentences):
        score[idx] = len(i)
        for j in i:
            if j.isupper():
                score[idx] += 1
                alpha[idx].append(ord(j)-65)
                alpha[idx].append(-999)

            else:
                alpha[idx].append(ord(j)-97)
            alpha[idx] = list(set(alpha[idx]))
            if -65 in alpha[idx]:
                alpha[idx].remove(-65)

    for idx, i in enumerate(alpha[:-1]):
        answer += score[idx]
        for jdx, j in enumerate(alpha[1:]):
            if idx == jdx:
                continue
            if list(set(j) & set(i)) == set(i):
                answer += score[jdx]

    return answer
n3 —————————————————————————————————————————————————
def solution(num_teams, remote_tasks, office_tasks, employees):
    answer = []

    team = [[] for _ in range(num_teams)]
    emp = [[] for _ in range(num_teams)]

    for idx, i in enumerate(employees):
        arr = i.split()
        emp[int(arr[0])-1].append(idx+1)

        for j in arr[1:]:
            if j in office_tasks:
                team[int(arr[0])-1].append(idx+1)
                break

    for idx, i in enumerate(team):
        if i == []:
            team[idx].append(emp[idx][0])


    team = sum(team, [])
    for i in range(1,len(employees)+1):
        if i not in team:
            answer.append(i)

    return answer
n4 —————————————————————————————————————————————————
def solution(arr, brr):
    answer = 0

    tmp = arr[:1] + arr[1:]
    for idx, i in enumerate(arr):
        if tmp[idx] < brr[idx]:
            if idx+1 < len(tmp):
                tmp[idx+1] -= brr[idx] - tmp[idx]
                tmp[idx] = brr[idx]
                answer += 1

        elif tmp[idx] > brr[idx]:
            if idx+1 < len(tmp):
                tmp[idx+1] += tmp[idx] - brr[idx]
                tmp[idx] = brr[idx]
                answer += 1

    return answer
n5 —————————————————————————————————————————————————
def solution(abilities, k):
    answer = 0
    abilities.sort(reverse = True)

    if len(abilities)%2 != 0:
        answer += abilities[-1]
        k -= 1

    for i in range((len(abilities))//2):
        if k > 0:
            answer += abilities[i*2]
        else:
            answer += abilities[i*2+1]

    return answer

n6(테케 일부 통과) —————————————————————————————————————————————————
def solution(req_id, req_info):
    answer = []

    req = list(zip(req_id, req_info))
    sell = []
    buy = []
    for i in req:
        if i[1][0] == 1:
            sell.append(i)
        else:
            buy.append(i)

    sell = sorted(sell, key = lambda x:x[1][-1])
    buy = sorted(buy, key = lambda x:x[1][-1], reverse = True)

    person = []
    for i in buy:
        cnt = i[1][1]
        lose = 0
        get = 0
        for j in sell:
            tmp = []
            if cnt >= j[1][1]:
                tmp.append(j[0])
                tmp.append(str(j[1][1] * -1))
                tmp.append('+'+(str(j[1][2] * j[1][1])))
                answer.append(' '.join(tmp))
                lose += j[1][2] * j[1][1]
                get += j[1][1]
                cnt -= j[1][1]
            else: 
                break
        tmp = []

        if i[0] in person:
            break
        else: 
            person.append(i[0])
            tmp.append(i[0])

        if get != 0:
            tmp.append('+'+str(get))
        else:
            tmp.append(str(get))
        if lose != 0:
            tmp.append('-'+str(lose))
        else:
            tmp.append(str(lose))
        answer.append(' '.join(tmp))

    answer = list(set(answer))
    answer = sorted(answer, key = lambda x:x[0])
    return answer